import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const startTime = Date.now()
  
  // Add performance headers
  const response = NextResponse.next()
  
  // Add cache control headers for static resources
  if (request.nextUrl.pathname.startsWith('/api/')) {
    // API routes - no aggressive caching by default
    response.headers.set('Cache-Control', 'no-cache, must-revalidate')
  } else if (request.nextUrl.pathname.match(/\.(css|js|png|jpg|jpeg|gif|svg|ico|woff|woff2)$/)) {
    // Static assets - aggressive caching
    response.headers.set('Cache-Control', 'public, max-age=31536000, immutable')
  }
  
  // Add performance monitoring headers
  response.headers.set('X-Request-Start', startTime.toString())
  response.headers.set('X-Forwarded-Proto', request.nextUrl.protocol.slice(0, -1))
  
  return response
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!_next/static|_next/image|favicon.ico).*)',
  ],
}
